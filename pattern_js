

// Display the pop-up when the page loads
window.onload = function() {
    document.getElementById('popup').style.display = 'flex';
};

// Close the pop-up when the "Start Game" button is clicked
document.getElementById('close-popup').onclick = function() {
    document.getElementById('popup').style.display = 'none';
};

// Close the pop-up if clicked outside the content
document.getElementById('popup').onclick = function(e) {
    if (e.target === this) {
        document.getElementById('popup').style.display = 'none';
    }
};

/* ----------------------------------------------------------------
   Data: Info and quiz for each location (Auditorium, Cafeteria...)
   Add as many entries as needed to cover your campus plan
------------------------------------------------------------------ */
const locationData = {
    auditorium: {
        title: "Auditorium",
        info: "The auditorium is the largest lecture hall in the building. Some of the lectures are held here, so be sure to check your schedule for classes in this space.",
        question: "How many chairs are at the Auditorium?",
        options: ["160", "170", "180", "190"],
        correctIndex: 1 // corresponds to "200"
    },
    cafeteria: {
        title: "Cafeteria",
        info: "The cafeteria at Karelia is the perfect spot for an affordable student breakfast, lunch, snack, or coffee. The buffet changes daily to offer variety and provides you with the energy you need to power through your day.",
        question: "How much does the cheapest menu cost for students?",
        options: ["1.05", "1.95", "2.05", "2.95"],
        correctIndex: 4 // corresponds to "Karelian Pie"
    },
    pokaOffice: {
        title: "Poka office",
        info: "As a member of the student union POKA, you become part of the vibrant Karelia student community. Even if you're not a member, you can still sign up for some of the coolest campus activities for a small fee. Don't miss out on the fun!",
        question: "What is the animal on the Poka badge?",
        options: ["Wolf", "Duck", "Lion", "Reindeer"],
        correctIndex: 2 // corresponds to "200"
    },
    chaple: {
        title: "Chaple",
        info: "The campus Chaplains are here to assist you with any concerns or complaints, or if you simply need someone to talk to. They provide support and a listening ear, offering guidance and comfort whenever you need it.",
        question: "Who can go to the chaple?",
        options: ["The students", "The teachers", "Nobody", "Everyone at Karelia"],
        correctIndex: 4 // corresponds to "200"
    },
    wellbeingOffice: {
        title: "Wellbeing office",
        info: "If you're struggling with your studies or organization, or if you're facing challenges, they are here to help you find a solution. You can always rely on support and guidance to move forward.",
        question: "How many years has Finland been the happiest country in the world?",
        options: ["2 years", "5 years", "7 years", "10 years"],
        correctIndex: 3 // corresponds to "200"
    },
    quietroom: {
        title: "Quiet room",
        info: "The quiet room is a space designed to help you clear your mind, reduce stress, and escape the loud noises in the school. It’s a perfect place to relax and focus when you need a break.",
        question: "What can you do in a quiet room?",
        options: ["Study", "Praying", "Talk", "Chilling"],
        correctIndex: 4 // corresponds to "200"
    },
    cubicles: {
        title: "Cubicles",
        info: "At Karelia, there are several cubicles available for quiet study, group meetings, or important phone calls. You can reserve a cubicle through the booking system on the door.",
        question: "What is the maximum time that you can reserve a cubicle?",
        options: ["1 hrs.", "2 hrs.", "3 hrs.", "5 hrs."],
        correctIndex: 3 // corresponds to "200"
    },
    parkingLot: {
        title: "Parking lot",
        info: "You can park your car in the designated area on campus.",
        question: "Who do you contact if you want a parking permit?",
        options: ["The poka union", "The director", "Infodesk", "Your teacher"],
        correctIndex: 3 // corresponds to "200"
    },
    smokingArea: {
        title: "Smoking area",
        info: "Smoking is only permitted in the designated area on campus. Smoking is prohibited everywhere else. Please make sure to follow these rules for the comfort and safety of everyone.",
        question: "What is a true interesting fact about smoking in Finland?",
        options: ["Smoking is forbidden at public spaces", "Finland has the strictest smoking laws in Europe", "Most Finns smoke in the sauna", "Cigarettes in Finland are the most expensive in all of Europe"],
        correctIndex: 2 // corresponds to "200"
    },
    entrance: {
        title: "Entrance",
        info: "Upon entering, you'll find yourself in the main hall, where you can enjoy various games and gather with other students in a relaxed atmosphere.",
        question: "Approximately, how many students are studying at Karelia at the moment?",
        options: ["2500", "4300", "7400", "1100"],
        correctIndex: 2 // corresponds to "200"
    },
    classroom: {
        title: "Entrance",
        info: "You can learn Finnish in one of our other game. So you can learn while having fun!",
        question: "What is the translation of “train station” in Finnish?",
        options: ["rautatieasema", "koulu", "syö", "Pudota"],
        correctIndex: 1 // corresponds to "200"
    }
    
    // Add more entries for each location
};

// Current player score
let score = 0;

// To avoid replaying the same question, store visited locations
let visitedLocations = {};

// Get DOM elements
const modal = document.getElementById("locationModal");
const closeModalBtn = modal.querySelector(".close");
const scoreValueEl = document.getElementById("score-value");
const badgeLevelEl = document.getElementById("badge-level");

// Close the modal when clicking on the cross
closeModalBtn.onclick = function() {
    modal.style.display = "none";
};

// Close the modal if clicked outside
window.onclick = function(event) {
    if (event.target == modal) {
        modal.style.display = "none";
    }
};

// Event listeners on all clickable areas of the map
document.querySelectorAll("area[data-location]").forEach(area => {
    area.addEventListener("click", function(e) {
        e.preventDefault();
        const locationKey = this.dataset.location;
        openLocationModal(locationKey);
    });
});

/* Open the modal for a given location */
function openLocationModal(locationKey) {
    const data = locationData[locationKey];
    if (!data) return; // If no data, do nothing

    // Fill the modal with content
    document.getElementById("locationTitle").textContent = data.title;
    document.getElementById("locationInfo").textContent = data.info;
    document.getElementById("quizQuestion").textContent = data.question;

    // Generate answer options
    const quizOptionsDiv = document.getElementById("quizOptions");
    quizOptionsDiv.innerHTML = ""; // reset
    data.options.forEach((option, index) => {
        const label = document.createElement("label");
        label.innerHTML = `
            <input type="radio" name="quizOption" value="${index}">
            ${option}
        `;
        quizOptionsDiv.appendChild(label);
        quizOptionsDiv.appendChild(document.createElement("br"));
    });

    // Display the modal
    modal.style.display = "block";

    // When "Submit" is clicked, check the answer
    document.getElementById("submitAnswer").onclick = () => {
        checkAnswer(locationKey);
    };
}

/* Check the selected answer */
function checkAnswer(locationKey) {
    // If already answered for this location, prevent replaying
    if (visitedLocations[locationKey]) {
        alert("You've already answered this location!");
        return;
    }

    const data = locationData[locationKey];
    const selected = document.querySelector('input[name="quizOption"]:checked');

    if (!selected) {
        alert("Please select an answer!");
        return;
    }

    const selectedIndex = parseInt(selected.value);
    if (selectedIndex === data.correctIndex) {
        // Correct answer: gain 10 points
        score += 10;
        scoreValueEl.textContent = score;
        updateBadge();
        alert("Correct! You earned 10 Salmiakki!");
    } else {
        alert("Wrong answer. Try again next time!");
    }

    // Mark the location as "visited"
    visitedLocations[locationKey] = true;
    // Close the modal
    modal.style.display = "none";
}

/* Update the badge based on the score */
function updateBadge() {
    let badgeLevel = "";
    if (score >= 110) {
        badgeLevel = "Gold Badge";
    } else if (score >= 100) {
        badgeLevel = "Silver Badge";
    } else if (score >= 50) {
        badgeLevel = "Bronze Badge";
    }
    badgeLevelEl.textContent = badgeLevel ? ` - ${badgeLevel}` : "";
}
